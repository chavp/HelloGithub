<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>CSS Paralla</title>
    <style type="text/css">
        body {
            padding:0px;
            margin:0px;
        }
        .layer {
            position:absolute;
            width:100%;
            height:256px;
        }

        #back {
            background:#3BB9FF url(images/back1.png) 20% 0px;

        }
        #middle{
            background:transparent url(images/back2.png) 30% 0px;

        }
        #front{
            background:transparent url(images/back3.png) 40% 0px;

        }
    </style>
</head>
<body>
    <div id="back" class="layer"></div>
    <div id="middle" class="layer"></div>
    <div id="front" class="layer"></div>
</body>
</html>
<script src="Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
<script type="text/javascript">
        $(function () {
            var speed = 0,
                $back = $('#back'),     // Initial speed.
                $middle = $('#middle'), // Cache layers as jQuery objects.
                $front = $('#front'),
                xPos = 0,               // Initial x position of background images.
                $win = $(window);       // Cache jQuery reference to window.


            // Respond to mousemove events.
            $(document).mousemove(function (e) {
                var halfWidth = $win.width()/2;
                // Calculate speed based on mouse position.
                // 0 (center of screen) to 1 at edges.
                speed = e.pageX - halfWidth;
                speed /= halfWidth;
            });

            // Kill speed on mouseout.
            $(document).mouseout(function (e) {
                speed = 0;
            });

            // Every 30ms, update each layer's background image position.
            // The two front layers use a scaled-up x position to
            // create the parallax effect.
            setInterval(function () {

                // Update the background position variable.
                xPos += speed;

                // Apply it to the layers' background image positions,
                // scaled up for the front two layers so they move quicker
                // than the farthest layer.
                $back.css({
                    backgroundPosition: xPos + 'px 0px'
                });
                $middle.css({
                    backgroundPosition: (xPos * 2) + 'px 0px'
                });
                $front.css({
                    backgroundPosition: (xPos * 3) + 'px 0px'
                });


            }, 30);

        });
    </script>